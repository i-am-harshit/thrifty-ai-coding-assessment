{
  "info": {
    "name": "URL Shortener Service API",
    "description": "Complete API collection for testing the URL Shortener Service",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "shortId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Shorten URL",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"url\": \"https://www.google.com\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/shorten",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "shorten"
          ]
        },
        "description": "Create a new short URL from a long URL"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Response has shortUrl\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('shortUrl');",
              "    pm.expect(jsonData).to.have.property('shortId');",
              "    pm.collectionVariables.set('shortId', jsonData.shortId);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Redirect Short URL",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/{{shortId}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "{{shortId}}"
          ]
        },
        "description": "Access a short URL (will redirect to original URL)"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 301 (redirect)\", function () {",
              "    pm.response.to.have.status(301);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get URL Statistics",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/stats/{{shortId}}",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "stats",
            "{{shortId}}"
          ]
        },
        "description": "Get analytics and statistics for a short URL"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has analytics data\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('clickCount');",
              "    pm.expect(jsonData).to.have.property('topReferrers');",
              "    pm.expect(jsonData).to.have.property('originalUrl');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "health"
          ]
        },
        "description": "Check if the service is running properly"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has status OK\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.status).to.eql('OK');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Test Invalid URL",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"url\": \"invalid-url\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/shorten",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "shorten"
          ]
        },
        "description": "Test error handling with invalid URL"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Response has error message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('error');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Test Non-existent Short URL",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/nonexist",
          "host": [
            "{{base_url}}"
          ],
          "path": [
            "nonexist"
          ]
        },
        "description": "Test 404 handling for non-existent short URLs"
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404\", function () {",
              "    pm.response.to.have.status(404);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ]
}